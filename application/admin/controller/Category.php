<?php
/**
 * Created by PhpStorm.
 * User: zjj
 * Date: 2019/8/7
 * Time: 22:48
 */

namespace app\admin\controller;

use app\common\service\PageRender;
use app\common\controller\Base;
use app\common\service\CategoryService;
use think\Controller;

use think\Db;
use think\Exception;

class Category extends Base
{
    /**
     * @var objCategory
     */
    private $objCategory = null;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->objCategory = new CategoryService();
    }

    public function index()
    {
        $parent = input('parent_id');
        $where = array('status' => ['neq', -1]);
        if($parent || $parent === '0'){
            $where['parent_id'] = $parent;
        }
        $page = input('page');
        $page = $page ? $page : 1;
        $objCategory = $this->objCategory;
        $categorys = $objCategory->some($where, $page, 10, array('weight' => 'asc', 'create_time' =>'desc'));
//        $count = $objCategory->count();
//        $render = new PageRender($count, 10);
//        $links = $render->simpleLinks();
//        $this->assign('links', $links);

        $this->assign('categorys',$categorys);
        return $this->fetch();
    }

    public function add()
    {
        $objCategory = $this->objCategory;
        $categorys = $objCategory->all(array("parent_id" => 0));
        $this->assign('categorys', $categorys);

        //编辑
        $id = input('id');
        if($id){
            $category = $objCategory->one($id);
            $this->assign('item', $category->item);
            $this->assign('currCate', $category->parent_id);
            $this->assign('action', url('admin/category/edit',['id' => $id]));
        }else{
            $this->assign('action', url('admin/category/save'));
        }
        return $this->fetch();
    }

    public function save()
    {
        $objCategory = $this->objCategory;
        $parent = input('parent_id');
        $_intSum = $objCategory->count(array("parent_id" => $parent)) + 1;

        $data = [
            'item' => input('name'),
            'code' => $parent . "_" . $_intSum,
            'parent_id' => $parent,
        ];
        $id = input('id');
        if($id){
            $result = $objCategory->edit($data, array('id' => $id));
        }else{
            $result = $objCategory->create($data);
        }
        if(false === $result)
        {
            return $this->error('保存失败！');
        }
        return $this->success('保存成功！');
    }

    public function delete()
    {
        $id = input('id');

        try{
            Db::startTrans();
            //级联删除
            $this->cascadeDel($id);
            $this->objCategory->deleteSome($id);
            Db::commit();
        }catch(Exception $e){
            return $this->error($e->getMessage());
        }
//        $this->redirect(url('admin/category/index'));
        return $this->success('删除成功！');
    }

    private function cascadeDel($id){
        $child = $this->objCategory->all(array('parent_id' => $id));
        if(!empty($child)){
            foreach($child as $category){
                $this->cascadeDel($category->id);
            }
        }else{
            $this->objCategory->deleteSome($id);
        }
    }

    public function status()
    {
        $data = array(
            'status' => input('status')
        );
        $result = $this->objCategory->edit($data, array('id' => input('id')));
        if($result){
            $this->success('更新成功');
        }else{
            $this->error('更新失败');
        }
    }

    public function weight()
    {
        $data = array(
            'weight' => input('weight')
        );
        $result = $this->objCategory->edit($data, array('id' => input('id')));
        if($result){
            $this->success('更新成功');
        }else{
            $this->error('更新失败');
        }
    }

}